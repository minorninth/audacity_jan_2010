dnl
dnl audacity configure.in script
dnl
dnl Joshua Haberman
dnl

dnl Process this file with autoconf to produce a configure script.
AC_INIT
AC_CONFIG_SRCDIR([AudacityApp.h])


dnl Checks for programs.
AC_PROG_CC
AC_PROG_GCC_TRADITIONAL
AC_LANG([C++])
AC_PROG_CXX
AC_PROG_CXXCPP

AC_PATH_PROG(WXSTATIC, libwx_gtk.a, /usr/lib, /usr/local/lib)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_SIZE_T

CFLAGS=""
CPPFLAGS=""
CXXFLAGS=""

dnl options
AC_ARG_ENABLE(debug,
   [AC_HELP_STRING([--enable-debug],
      [enable debugging (wxWindows debugging libraries must be installed) [default=no]])],
   enable_debug=$enableval,
   enable_debug="no")
AC_ARG_ENABLE(warnings-as-errors,
   [AC_HELP_STRING([--enable-warnings-as-errors],
      [cause compilation to stop with any compiler warnings. Good for conscientious coding. [default=no]])],
   warnings_as_errors=$enableval,
   warnings_as_errors="no")
AC_ARG_WITH(vorbis,
   [AC_HELP_STRING([--with-vorbis],
      [enable ogg vorbis support (libraries must be installed) [default=no]])],
   use_vorbis=$withval,
   use_vorbis="no")
AC_ARG_WITH(id3lib,
   [AC_HELP_STRING([--with-id3lib],
      [enable id3lib support (libraries must be installed) [default=no]])],
   use_id3lib=$withval,
   use_id3lib="no")


dnl check to make sure that all the user's options are valid
AC_CANONICAL_HOST
host_cpu=`echo "$host_cpu" | sed "s/i.86/i386/"`
host_os=`echo "$host_os" | sed "s/-.*//"`

if [[ $warnings_as_errors = "yes" ]] ; then
   dnl TODO: once all C files will compile without warnings (ie. when we ditch snd),
   dnl make this set CPPFLAGS instead
   CXXFLAGS="$CXXFLAGS -Werror"
fi

dnl --- check for optional libraries ---

if [[ $use_vorbis = "yes" ]] ; then

   dnl check for both headers and libraries
   
   AC_CHECK_LIB(vorbisfile, ov_open, true, [dnl here true is just a nop
      echo "ERROR: unable to find libvorbisfile.a or libvorbisfile.so library file"
      echo "Audacity uses libvorbisfile for Ogg Vorbis support. If you specify"
      echo "--with-vorbis, you must have this library already installed. You can"
      echo "download it from http://www.vorbis.com. If you think you already have"
      echo "it installed, make sure it's in a place where your linker can find it" ]
      AC_MSG_ERROR([*** Ogg Vorbis libraries not found.]),
      -lvorbis -logg) dnl auxiliary library that -lvorbisfile needs

   AC_CHECK_HEADER(vorbis/vorbisfile.h, , [
      echo "ERROR: unable to find vorbis/vorbisfile.h header file"
      echo "Audacity uses libvorbisfile for Ogg Vorbis support. If you specify"
      echo "--with-vorbis, you must have this library and its headers already installed."
      echo "You can download it from http://www.vorbis.com. If you think you already have"
      echo "it installed, make sure it's in a place where your compiler can find it." ]
      AC_MSG_ERROR([*** Ogg Vorbis headers not found.]))

   LIBS="$LIBS -lvorbisfile -lvorbis -logg"
   AC_DEFINE(USE_LIBVORBIS, 1,
      [Define if the ogg vorbis decoding library is present])
fi

if [[ $use_id3lib = "yes" ]] ; then
   dnl libid3 -- check both headers and libraries

   AC_CHECK_LIB(id3, ID3Tag_New, true, [ dnl here true is just a nop
      echo "ERROR: unable to find libid3.a or libid3.so library file"
      echo "Audacity uses libid3 for ID3 tag support. If you specify"
      echo "--with-id3lib, you must have this library already installed. You can"
      echo "download it from http://id3lib.sourceforge.net. If you think you already have"
      echo "it installed, make sure it's in a place where your linker can find it" ]
      AC_MSG_ERROR([*** id3lib libraries not found.]))

   AC_CHECK_HEADER(id3.h, , [
      echo "ERROR: unable to find id3.h header file"
      echo "Audacity uses libid3 for ID3 tag support. If you specify --with-id3lib,"
      echo "you must have this library and its headers already installed. You can "
      echo "download it from http://id3lib.sourceforge.net. If you think you already"
      echo "have it installed, make sure it's in a place where your compiler can find it." ]
      AC_MSG_ERROR([*** id3lib headers not found. id3lib must be installed for id3 tag support]))

   LIBS="$LIBS -lid3"
   AC_DEFINE(USE_ID3LIB, 1,
      [Define if id3lib is present])
fi

dnl --- debugging tweaking ---

debugstring="non-debugging"
wxconfig="wxgtk-config"
if [[ $enable_debug = "yes" ]] ; then
	CPPFLAGS="$CPPFLAGS -g -O0"
	wxconfig="wxgtkd-config"
   debugstring="debugging"
else
   CPPFLAGS="$CPPFLAGS -O3"
fi

dnl --- check for required libraries ---

dnl wxWindows -- we assume that if wx-config is found, wxWindows is successfully installed.
AC_PATH_PROG(WX_CONFIG, $wxconfig, no)
if [[ "$WX_CONFIG" = "no" ]] ; then
   echo "ERROR: Unable to find $wxconfig. This is a part of the wxWindows distribution."
   echo "Please verify that:"
   echo "      1. wxWindows is installed (download from http://www.wxwindows.org)"
   echo "      2. the $debugstring libraries for wxWindows are installed"
   echo "      3. $wxconfig is on your path"
   AC_MSG_ERROR([*** Could not find $wxconfig])
fi
LIBS="$LIBS \`$wxconfig --libs\`"
CPPFLAGS="$CPPFLAGS \`$wxconfig --cflags\`"

AC_CONFIG_HEADER(configunix.h:configtemplate.h)
AC_CONFIG_FILES([Makefile])
AC_OUTPUT

echo "Summary of Configuration Options:"
if [[ $enable_debug = "yes" ]] ; then
   echo "  + debugging is enabled"
else
   echo "  + debugging is disabled"
fi

if [[ $use_vorbis = "yes" ]] ; then
   echo "  + Ogg Vorbis support is enabled"
else
   echo "  + Ogg Vorbis support is disabled"
fi

if [[ $use_id3lib = "yes" ]] ; then
   echo "  + ID3 tag support is enabled"
else
   echo "  + ID3 tag support is disabled"
fi

