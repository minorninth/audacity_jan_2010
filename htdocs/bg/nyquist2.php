<?php BoxTop("Nyquist (2)"); ?>

<p>
<?php print "<a href=nyquist.php?$langLinkStr>";
?>Част 1: Въведение в Nyquist и програмирането на Lisp.</a><br>
<b>Част 2: Програмиране на Nyquist.</b><br>
<?php print "<a href=nyquist3.php?$langLinkStr>";
?>Част 3: Създаване на приставки с Nyquist.</a><br>
</p>

<p>
Това, по което Nyquist се различава от Lisp, е фактът, че е
предназначен за работа със звук и съдържа множество вградени
примитиви и функции за синтез, анализ и манипулиране на звук.
Tова позволява относително лесно изграждане на сложни ефекти
в Audacity чрез набора от вградени функции на Nyquist.
</p>

<p>
В Nyquist променливите могат да съдържат звук по същия начин,
както могат да съдържат число или низ. Налице са много функции
за ефективно разтягане, изкривяване и комбиниране на звуци.
Дори можете да разложите звук и да работите с отделните
дискретизирани стойности, но това е извън обхвата на този
самоучител.
</p>

<p>
<b>
За да изпробвате израз на Nyquist в Audacity, можете да използвате
командата "Nyquist Prompt" в менюто Effect. Маркираният предварително
звук ще бъде в променливата <tt>s</tt>, а после маркираната област
ще бъде заменена с резултата от въведения от вас израз на Nyquist.
В част 3 ще научите как можете да създадете приставка за ефект чрез Nyquist.
</b>
</p>

<p>
<b>Синтезиране</b>
</p>

<p>
Всяка от долните функции създава звук. Можете да ги използвате за
приставки, генериращи звук, или да комбинирате синтезирания звук
с маркирания в програмата, за да получите някой интересен ефект. 
</p>

<table border=0>
<tr>
<td>(noise)</td>
<td>Генерира бял шум</td>
</tr>

<tr>
<td>(const стойност [продължителност])</td>
<td>Генерира константен (беззвучен) сигнал</td>
</tr>

<tr>
<td>(sine височина [продължителност])</td>
<td>Генерира синусоидална вълна със зададената височина и продължителност.<br>
    Височината е номер на нота по стандарта MIDI, 60 е "до" от 1-ва октава.</td>
</tr>

<tr>
<td>(hzosc Хц)</td>
<td>Генерира синусоидална вълна със зададена честота в Хц.</td>
</tr>

<tr>
<td>(osc-saw Хц)</td>
<td>Генерира трионообразна вълна със зададена честота в Хц.</td>
</tr>

<tr>
<td>(osc-tri Хц)</td>
<td>Генерира триъгълна вълна със зададена честота в Хц.</td>
</tr>

<tr>
<td>(osc-pulse Хц отклонение)</td>
<td>Генерира правоъгълен импулс с променлива ширина със зададената
    честота в Хц. Параметърът "отклонение" управлява ширината на импулса
    и трябва да бъде между -1 и +1, като -1 означава ширина 0%, а +1 - 100%.
    Ако отклонението е 0, се генерира квадратен импулс.</td>
</tr>

<tr>
<td>(pluck височина)</td>
<td>Генерира звук с дадената височина чрез модифицирана версия на
    алгоритъма за ударена струна на Karplus-Strong.</td>
</tr>

</table>

<p>
<b>Обвиващи криви</b>
</p>

<p>
Nyquist поддържа работа с обвиващи криви (envelopes). Прилагайки
обвиваща крива върху звук, можете да управлявате общата форма на
амплитудата му. Един от най-лесните начини за създаване на обвиваща
крива е функцията <tt>env</tt>, която приема 7 параметъра, често
използвани за оформяне на синтезираните музикални ноти: време за
атака (attack time), време за спад (decay time), 
време за отзвучаване (release time), ниво на атаката
(attack level), ниво на спада (decay level), ниво на платото
(sustain level) и обща продължителност (overall duration).
Вижте долната фигура:
</p>

<p>
<center>
<img src="/images/nyquist-envelope.gif" width=467 height=200>
</center>
</p>

<p>
За да приложите обвиваща крива върху звук, просто използвайте функцията
<tt>mult</tt>. И така, ако <tt>s</tt> е звук, ето как можем да приложим
проста обвиваща крива върху него:
</p>

<pre>
  (mult s (env 0.1 0.1 0.2 1.0 0.5 0.3 1.0))
</pre>

<p>
Един от най-общите типове обвиваща крива е начупената линия,
която може да бъде конструирана чрез функцията <tt>pwl</tt>.
Последната приема списък с параметри - двойки от вида (време, стойност).
Първата двойка е зададена неявно като (0, 0), а последната стойност -
като 0. Броят на параметрите винаги трябва да е нечетен, понеже последното
време се задава явно. Ето пример:
</p>

<pre>
  ; симетрично покачване до 0.7 (при време 1) и спад до 0 (при време 2):
  (pwl 1.0 0.7 2.0)
</pre>

<p>
<b>Комбиниране на звуци</b>
</p>

<p>
Освен да умножите два звука с функцията <tt>mult</tt>, можете
да съберете два звука (или две обвиващи криви) чрез функцията
<tt>add</tt>.
</p>

<p>
<b>Филтри</b>
</p>

<p>
Nyquist предлага набор от вградени филтри. Ето най-основните от тях:
</p>

<table border=0>

<tr>
<td>(lp звук чс)</td>
<td>Нискочестотен филтър на Бътъруърт от първи ред.
Честотата на срязване чс може да бъде число с плаваща запетая или сигнал
(за променливо във времето филтриране) и се измерва в Хц.</td>
</tr>

<tr>
<td>(hp звук чс)</td>
<td>Високочестотен филтър на Бътъруърт от първи ред.
Честотата на срязване може да бъде число с плаваща запетая или сигнал
(за променливо във времето филтриране) и се измерва в Хц.</td>
</tr>

<tr>
<td>(comb звук Хц затихване)</td>
<td>Прилага върху звука гребенчат филтър (comb filter),
    който подчертава честотите, кратни на параметъра Хц.
</td>
</tr>

<tr>
<td>(alpass звук затихване Хц)</td>
<td>Филтър, пропускащ всички честоти (закъснител), който удължава звука без
    резонансите на филтъра comb.</td>
</tr>

<tr>
<td>(notch2 звук Хц)</td>
<td>Режекторен филтър (notch filter) от втори ред, центриран
около честота Хц.</td>
</tr>

</table>

<p>
<b>Трансформиране и комбиниране на звуци</b>
</p>

<p>
Описването на всички начини за трансформиране на звук в Nyquist
е извън обхвата на това въведение в езика. Тези функции не променят
пряко звука, а въздействат върху <i>обкръжението</i> (<i>environment</i>)
на Nyquist. За да се отразят промените върху даден звук, трябва да се
използва функцията <tt>cue</tt>.
</p>

<table border=0>

<tr>
<td>(stretch множител (cue звук))</td>
<td>Мащабира дължината на звука със зададения множител.</td>
</tr>

<tr>
<td>(scale множител (cue звук))</td>
<td>Мащабира амплитудата на звука със зададения множител.</td>
</tr>

<tr>
<td>(loud дБ (cue звук))</td>
<td>Увеличава или намалява силата на звука със зададената стойност
    в децибели.</td>
</tr>

<tr>
<td>(at t (cue звук))</td>
<td>Започва звука със закъснение t секунди.<br>
    По този начин не можете да добавите тишина в началото или края на звук,<br>
    но можете да го използвате при комбиниране на звуци.</td>
</tr>

<tr>
<td>(seq (cue зв1) (cue зв2))</td>
<td>Създава последователност от звука зв1, следван от звука зв2.</td>
</tr>

<tr>
<td>(sim (cue зв1) (cue зв2))</td>
<td>Комбинира два звука, така че да се възпроизвеждат едновременно.
</tr>

</table>

<p>
За повече информация вижте <a target=_top href="http://www-2.cs.cmu.edu/~rbd/doc/nyquist/root.html">Ръководството по Nyquist</a>.
</p>

<p>
<?php print "<a href=nyquist3.php?$langLinkStr>";
?><b>Следваща страница: създаване на приставки с Nyquist</b></a>
</p>

<?php BoxBottom(); ?>

