########################################
#
# Audacity Makefile
#
# Dominic Mazzoni
#
# Run configure to generate Makefile
# from Makefile.in
#

CC = @CC@
CCC = @CXX@

# Files that must exist in order to compile a C/C++ files
CDEPEND = @CDEPEND@

LOCAL_LIBS = @LOCAL_LIBS@
EXTRAOBJS = @EXTRAOBJS@
LIBS = @LIBS@
DIRS=blockfile commands effects effects/ladspa export import prefs widgets xml

srcdir=@srcdir@
top_srcdir=@top_srcdir@
top_builddir=@top_builddir@

# CFLAGS are specific to C.
override CFLAGS += @CFLAGS@

# CXXFLAGS are specific to C++.
override CXXFLAGS += @CXXFLAGS@

# CPPFLAGS are for both C and C++.
override CPPFLAGS += -Wall -I$(srcdir)/include -I. @CPPFLAGS@ 


########################################
# ALL OBJECT FILES

OBJS = \
	AColor.o \
	AStatus.o \
	AboutDialog.o \
	AudacityApp.o \
	AudioIO.o \
	Benchmark.o \
	ControlToolBar.o \
	Envelope.o \
	EditToolBar.o \
	FFT.o \
	FormatSelection.o \
	FreqWindow.o \
	Help.o \
	HistoryWindow.o \
	ImageManipulation.o \
	LabelTrack.o \
	Languages.o \
	LangChoice.o \
	Legacy.o \
	Menus.o \
	Mix.o \
	MixerToolBar.o \
	NoteTrack.o \
	PitchName.o \
	Project.o \
	Resample.o \
	RingBuffer.o \
	Spectrum.o \
	Tags.o \
	Track.o \
	TrackArtist.o \
	TrackPanel.o \
	ToolBar.o \
	UndoManager.o \
	WaveTrack.o \
	TimeTrack.o \
	commands/CommandManager.o \
	commands/Keyboard.o \
	effects/Effect.o \
	effects/SimpleMono.o \
	effects/SimplePairedTwoTrack.o \
	effects/SoundTouchEffect.o \
	effects/LoadEffects.o \
	effects/Amplify.o \
	effects/BassBoost.o \
	effects/ChangePitch.o \
	effects/ChangeSpeed.o \
	effects/ChangeTempo.o \
	effects/Compressor.o \
	effects/Echo.o \
	effects/Equalization.o \
	effects/Fade.o \
	effects/Filter.o \
	effects/Invert.o \
	effects/Noise.o \
	effects/NoiseRemoval.o \
	effects/Normalize.o \
	effects/Phaser.o \
	effects/Repeat.o \
	effects/Reverse.o \
	effects/Silence.o \
	effects/ToneGen.o \
	effects/Wahwah.o \
	export/Export.o \
	export/ExportMP3.o \
	export/ExportOGG.o \
	export/ExportPCM.o \
	export/ExportCL.o \
	import/Import.o \
	import/ImportLOF.o \
	import/ImportMIDI.o \
	import/ImportMP3.o \
	import/ImportOGG.o \
	import/ImportPCM.o \
	import/ImportRaw.o \
	import/RawAudioGuess.o \
	prefs/PrefsDialog.o \
	prefs/AudioIOPrefs.o \
	prefs/QualityPrefs.o \
	prefs/FileFormatPrefs.o \
	prefs/DirectoriesPrefs.o \
	prefs/GUIPrefs.o \
	prefs/KeyConfigPrefs.o \
	prefs/MousePrefs.o \
	prefs/SpectrumPrefs.o \
	widgets/AButton.o \
	widgets/ASlider.o \
	widgets/Ruler.o \
	widgets/Warning.o \
	xml/XMLFileReader.o \
	@OPTOBJS@

TEMPORARILY_DISABLED_IMPORTER_OBJS = \
	import/ImportMIDI.o \
	import/ImportPCM.o \
	import/ImportRaw.o \

LIBAUDACITY_OBJS = \
	BlockFile.o \
	Dither.o \
	DirManager.o \
	FileFormats.o \
	Prefs.o \
	SampleFormat.o \
	Sequence.o \
	Internat.o \
	blockfile/LegacyBlockFile.o \
	blockfile/LegacyAliasBlockFile.o \
	blockfile/SilentBlockFile.o \
	blockfile/SimpleBlockFile.o \
	blockfile/PCMAliasBlockFile.o \
	xml/XMLTagHandler.o \


########################################
# DEPENDENCIES

SOURCES = $(OBJS:%.o=$(srcdir)/%.cpp)
LIBAUDACITY_SOURCES = $(LIBAUDACITY_OBJS:%.o=$(srcdir)/%.cpp)
#DEPS = $(SOURCES) $(OPTOBJS) $(LIBAUDACITY_OBJS)

########################################

all: $(DIRS) libaudacity.a ../audacity

libaudacity.a: $(LIBAUDACITY_OBJS)
	ar rcs libaudacity.a $(LIBAUDACITY_OBJS)

../audacity: $(OBJS) $(LOCAL_LIBS:%=$(top_builddir)/lib-src/%) $(EXTRAOBJS) libaudacity.a Makefile
	$(CCC) -o ../audacity $(OBJS) $(LOCAL_LIBS:%=$(top_builddir)/lib-src/%) $(EXTRAOBJS) libaudacity.a $(LIBS)
	@AFTERBUILD@

$(DIRS):
	mkdir -p $(DIRS)

#
# You can optionally "make dep" to make dependencies.
# The sed script turns "Foo.o: bar/Foo.cpp" into "obj/bar/Foo.o:".
#

dep:
	$(CCC) -MM $(CXXFLAGS) $(CPPFLAGS) $(SOURCES) $(OPTSOURCES) $(LIBAUDACITY_SOURCES) > .depend

clean:
	rm -rf $(OBJS) $(LIBAUDACITY_OBJS)
	rm -f libaudacity.a

#
# Rule for compiling C++ files
#

$(OBJS) $(LIBAUDACITY_OBJS): %.o: $(srcdir)/%.cpp configunix.h $(CDEPEND)
	$(CCC) -c $(CXXFLAGS) $(CPPFLAGS) $< -o $@

#
# Include ".depend" if it exists (run "make dep" to generate it)
#

ifeq (.depend,$(wildcard .depend))
include .depend
endif

